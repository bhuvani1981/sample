---
- name: Test | Clone build artifact repo
  hosts: "{{ var_hosts }}"
  become: true

  roles:
    - ansible-role-awscli
  vars:
    github_repo_name: "ars-build-artifacts"
    destination_directory: "/opt/tmp"
    build_user: "{{ lookup('ansible.builtin.env', 'BUILDUSER') }}"
    build_token: "{{ lookup('ansible.builtin.env', 'BUILDTOKEN') }}"
    target_branch: PEDI-33881_staging_artifact_testing
  pre_tasks:
    - name: promoteBuildArtifact | Include all files in vars
      include_vars:
        dir: ../vars/ars-defaults
        extensions:
          - yml

    - name: promoteBuildArtifact | Include playbook pre tasks
      include_tasks: ../tasks/playbookPreTasks.yml

  tasks:
    - name: promoteBuildArtifact | Reset no log if verbosity is high enough
      set_fact:
        no_log_value: false
      when: ansible_verbosity >= 3

    - name: promoteBuildArtifact | Set facts for checkout
      set_fact:
        destination_repo: "https://{{ build_user }}:{{ build_token }}@github.com/department-of-veterans-affairs/{{ github_repo_name }}"

    - name: promoteBuildArtifact | Set default facts
      set_fact:
        files_to_release: "{{ lookup('ansible.builtin.env', 'files_to_release') }}"
        tag_name: "{{ lookup('ansible.builtin.env', 'tag_name') }}"

    - name: promoteBuildArtifact | Get existing tags
      ansible.builtin.command: git tag
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}/"
      register: git_tags

    - name: promoteBuildArtifact | Determine next candidate number
      set_fact:
        candidate_number: >-
          {{
            (
              git_tags.stdout_lines
              | select('match', tag_name + r'_candidate\d+')
              | map('regex_search', '_candidate(\\d+)', '\\1')
              | map('int')
              | list
              | default([ -1 ])
              | max + 1
            )
          }}
      when: app_env in ['prep']

    - name: promoteBuildArtifact | Set candidate suffix and release tag
      set_fact:
        candidate_suffix: "{{ app_env in ['prep'] | ternary('_candidate' ~ candidate_number, '') }}"
        release_tag: "{{ tag_name }}{{ candidate_suffix }}"

    - name: promoteBuildArtifact | Create dir to clone
      ansible.builtin.file:
        path: "{{ destination_directory }}"
        state: directory
        mode: 0750
 
    - name: promoteBuildArtifact | clone build artifact repo and checkout target branch
      ansible.builtin.git: 
        repo: "{{ destination_repo }}"
        dest: "{{ destination_directory }}/{{ github_repo_name }}/"
        version: "{{ target_branch | default(master) }}"
        accept_hostkey: yes
  
    - name: promoteBuildArtifact | Fetch latest develop branch
      ansible.builtin.command: git fetch origin develop
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}/"
      tags:
        - skip_ansible_lint
 
    - name: promoteBuildArtifact | Checkout specific files files from develop to target branch
      ansible.builtin.shell: git checkout origin/develop -- {{ item.artifact_folder }}/{{ item.filename }}
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}/"
      loop: "{{ files_to_release }}"
      tags:
        - skip_ansible_lint

    - name: promoteBuildArtifact | Commit and push promoted artifacts to target branch
      ansible.builtin.shell: |
        cd "{{ destination_directory }}/{{ github_repo_name }}"
        git add .
        git commit -m "ars_promoteBuildArtifacts-{{ release_tag }}"
        git tag -a {{ release_tag }} -m "Tagging artifacts with version {{ release_tag }}"
        git push origin {{ target_branch | default('master') }} --tags


 for _role in "${roles[@]}"
        do
          role="${_role// /}"
          branch_var=${role}_branch
          git_hash=''
          if [[ -n "${!branch_var}" ]]; then
            echo "${branch_var} branch: ${!branch_var}"
            git clone $DOVA_GH/ansible-role-$role --branch "${!branch_var}" "$CODEBUILD_SRC_DIR/roles/ansible-role-$role";
          else
            git clone $DOVA_GH/ansible-role-$role "$CODEBUILD_SRC_DIR/roles/ansible-role-$role";
          fi
          pwd
          pushd "$CODEBUILD_SRC_DIR/roles/ansible-role-$role"
          git_hash=$(git rev-parse HEAD | cut -c 1-7)
          ar_versions[$role]=$git_hash
          popd
          pwd
          echo "ansible-role-$role, commit id $git_hash"
        done
        for key in "${!ar_versions[@]}"; do
           ansible_role_versions+=$(echo "$key: ${ar_versions[$key]},")
        done
        export ansible_role_versions=${ansible_role_versions%,}


