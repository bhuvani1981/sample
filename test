  # Fix for the template error - simplified approach
    - name: promoteBuildArtifact | Extract candidate numbers
      ansible.builtin.set_fact:
        candidate_numbers: []
      when: app_env in ['prep']

    - name: promoteBuildArtifact | Process tags for candidate numbers
      ansible.builtin.set_fact:
        candidate_match: "{{ item | regex_search(tag_name + '_candidate(\\d+)', '\\1') }}"
        candidate_numbers: "{{ candidate_numbers + [candidate_match | int] }}"
      when: 
        - app_env in ['prep'] 
        - item is match(tag_name + '_candidate\\d+')
        - item | regex_search(tag_name + '_candidate(\\d+)', '\\1') != ''
      loop: "{{ git_tags.stdout_lines }}"
      loop_control:
        label: "{{ item }}"

    - name: promoteBuildArtifact | Set default candidate number if no matches
      ansible.builtin.set_fact:
        candidate_numbers: [0]
      when: 
        - app_env in ['prep']
        - candidate_numbers | length == 0

    - name: promoteBuildArtifact | Determine next candidate number
      ansible.builtin.set_fact:
        candidate_number: "{{ (candidate_numbers | max) + 1 }}"
      when: app_env in ['prep']

    - name: promoteBuildArtifact | Set candidate suffix and release tag
      set_fact:
        candidate_suffix: "{{ (app_env in ['prep']) | ternary('_candidate' ~ candidate_number, '') }}"
        release_tag: "{{ tag_name }}{{ (app_env in ['prep']) | ternary('_candidate' ~ candidate_number, '') }}"
