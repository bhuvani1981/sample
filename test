---
- name: Test | Clone build artifact repo
  hosts: "{{ var_hosts }}"
  become: true

  roles:
    - ansible-role-awscli
  vars:
    github_repo_name: "ars-build-artifacts"
    destination_directory: "/opt/tmp"
    build_user: "{{ lookup('ansible.builtin.env', 'BUILDUSER') }}"
    build_token: "{{ lookup('ansible.builtin.env', 'BUILDTOKEN') }}"
  pre_tasks:
    - name: promoteBuildArtifact | Include all files in vars
      include_vars:
        dir: ../vars/ars-defaults
        extensions:
          - yml

    - name: promoteBuildArtifact | Include playbook pre tasks
      include_tasks: ../tasks/playbookPreTasks.yml

  tasks:
    - name: promoteBuildArtifact | Reset no log if verbosity is high enough
      set_fact:
        no_log_value: false
      when: ansible_verbosity >= 3

    - name: promoteBuildArtifact | Set facts for checkout
      set_fact:
        destination_repo: "https://{{ build_user }}:{{ build_token }}@github.com/department-of-veterans-affairs/{{ github_repo_name }}"

    - name: promoteBuildArtifact | Set default facts
      set_fact:
        files_to_release: "{{ lookup('ansible.builtin.env', 'files_to_release') }}"
        tag_name: "{{ lookup('ansible.builtin.env', 'tag_name') }}"
        target_branch: "{{ lookup('ansible.builtin.env', 'target_branch') }}"

    - name: promoteBuildArtifact | Create dir to clone
      ansible.builtin.file:
        path: "{{ destination_directory }}"
        state: directory
        mode: 0750
 
    - name: promoteBuildArtifact | Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ destination_directory }}/{{ github_repo_name }}"
        state: directory
        mode: '0750'

    - name: promoteBuildArtifact | Initialize and checkout target branch
      ansible.builtin.shell: |
        git init
        git remote add origin {{ destination_repo }} 2>/dev/null || true
        git fetch origin
        git checkout -f $(git rev-parse --verify origin/master 2>/dev/null || \
                          git rev-parse --verify origin/main 2>/dev/null || echo "HEAD")
        git branch -D {{ target_branch }} 2>/dev/null || true
        git checkout -b {{ target_branch }} || git checkout {{ target_branch }}
        git fetch --tags
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}"
      tags: skip_ansible_lint

    - name: promoteBuildArtifact |  Get existing git tags
      ansible.builtin.command: git tag
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}"
      register: git_tags
      changed_when: false
      tags: skip_ansible_lint

    # Find matching candidate tags
    - name: promoteBuildArtifact | Set matching candidate tags
      set_fact:
        matching_tags: >-
          {{ git_tags.stdout_lines
          | select('search', tag_name + '_candidate\\d+')
          | list }}
      when: app_env == 'prep'

    - name: promoteBuildArtifact | Debug matching tags before extracting numbers
      debug:
        msg: "Matching tags: {{ matching_tags | default([]) }}"
      when: app_env == 'prep'

    # Extract candidate numbers from tags like v2.4.3_candidatex
    - name: promoteBuildArtifact | Extract candidate numbers
      set_fact:
        candidate_numbers: >-
          {{
            matching_tags
           | map('regex_search', '_candidate(\\d+)', '\\1')
           | select('string')
           | map('int')
           | list
          }}
      when: 
        - app_env == 'prep'
        - matching_tags is defined
        - matching_tags | length > 0

    - name: promoteBuildArtifact | Initialize candidate numbers
      set_fact:
        candidate_numbers: []
      when: 
        - app_env == 'prep'
        - candidate_numbers is not defined or (matching_tags is defined and matching_tags | length == 0)

    # Determine next candidate number with safer handling
    - name: promoteBuildArtifact | Set next candidate number
      set_fact:
        candidate_number: >-
          {{
            (candidate_numbers | default([0]) | max) + 1
          }}
      when: app_env == 'prep'

    # Set release tag and suffix for all environments
    - name: promoteBuildArtifact | Set release tag
      set_fact:
        candidate_suffix: "{{'_candidate' ~ candidate_number if app_env == 'prep' else '' }}"
        release_tag: "{{ tag_name ~ ('_candidate' ~ candidate_number if app_env == 'prep' else '') }}"

    - name: promoteBuildArtifact | Checkout specific files from develop to target branch
      ansible.builtin.shell: git checkout origin/develop -- {{ item.artifact_folder }}/{{ item.filename }}
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}/"
      loop: "{{ files_to_release }}"
      tags:
        - skip_ansible_lint

    - name: promoteBuildArtifact | Check for changes
      ansible.builtin.command: git status --porcelain
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}/"
      register: git_status
      changed_when: false
      tags:
        - skip_ansible_lint

    # Check if remote tag exists before committing
    - name: promoteBuildArtifact | Check if remote tag exists
      command: git ls-remote --tags origin {{ release_tag }}
      register: tag_exists
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}"
      changed_when: false
      tags:
        - skip_ansible_lint

    # Pull latest changes before pushing to avoid rejection
    - name: promoteBuildArtifact | Pull latest changes
      command: git pull --rebase origin {{ target_branch | default('master') }}
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}"
      tags:
        - skip_ansible_lint

    # Enhanced commit and push with error handling
    - name: promoteBuildArtifact | Commit and push promoted artifacts
      block:
        - name: Commit and push changes
          ansible.builtin.shell: |
            cd "{{ destination_directory }}/{{ github_repo_name }}"
            git add .
            if [ -n "$(git status --porcelain)" ]; then
              git commit -m "ars_promoteBuildArtifacts-{{ release_tag }}"
            fi
            
            if [ -z "{{ tag_exists.stdout }}" ]; then
              git tag -a {{ release_tag }} -m "Tagging artifacts with version {{ release_tag }}"
            else
              echo "Tag {{ release_tag }} already exists, skipping tag creation"
            fi
            
            git push origin {{ target_branch | default('master') }} --tags
          register: git_push_result
          tags:
            - skip_ansible_lint
      rescue:
        - name: Handle git error - delete tag locally if needed
          shell: |
            cd "{{ destination_directory }}/{{ github_repo_name }}"
            if git tag | grep -q "{{ release_tag }}"; then
              git tag -d {{ release_tag }}
            fi
          when: tag_exists.stdout != ""
          tags:
            - skip_ansible_lint
          
        - name: Fail with useful error message
          fail:
            msg: "Git operations failed. Make sure your branch is up to date and tag doesn't already exist remotely."
